# Generated by Django 4.2.4 on 2024-12-15 15:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("notification", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("customer", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.DecimalField(decimal_places=6, max_digits=9)),
                ("longitude", models.DecimalField(decimal_places=6, max_digits=9)),
                ("city", models.CharField(max_length=255)),
                ("district", models.CharField(max_length=255)),
                ("neighborhood", models.CharField(max_length=255)),
                ("street", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Models",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("file", models.FileField(upload_to="models/")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("YOLOV8", "YOLOv8"),
                            ("TENSORRT", "TensorRT"),
                            ("OPENVINO", "OpenVINO"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "sample_image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("class_item", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Polygons",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "coordinates",
                    models.JSONField(
                        help_text="Store coordinates as [[x1,y1], [x2,y2],...]"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "verbose_name_plural": "Polygons",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Sources",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("url", models.CharField(default="RTSP://", max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("HLS", "HTTP Live Streaming (HLS)"),
                            ("MPEG-DASH", "MPEG-DASH"),
                            ("LOCAL_FILES", "Local Files"),
                            ("NETWORK_STREAMS", "Network Streams"),
                            ("WEBCAMS", "Webcams"),
                            ("IP_CAMERAS", "IP Cameras"),
                            ("VIDEO_FILE_HOSTING", "Video File Hosting Services"),
                        ],
                        default="RTSP",
                        max_length=50,
                    ),
                ),
                ("addtype", models.CharField(blank=True, max_length=255, null=True)),
                ("fps", models.IntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("status", models.CharField(default="0", max_length=50)),
                ("resolution", models.CharField(blank=True, max_length=50, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("is_mobile", models.BooleanField(default=False)),
                ("is_record", models.BooleanField(default=False)),
                (
                    "record_folder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "inlocation",
                    models.ManyToManyField(
                        blank=True, related_name="sources", to="services.location"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "models",
                    models.ManyToManyField(
                        blank=True, related_name="services", to="services.models"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RulesAdd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="customer.customer",
                    ),
                ),
                (
                    "notifications",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="notification.notifications",
                    ),
                ),
                (
                    "polygon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polygon_rules",
                        to="services.polygons",
                    ),
                ),
                (
                    "services",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_rules",
                        to="services.services",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="services.sources",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="polygons",
            name="source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polygons",
                to="services.sources",
            ),
        ),
        migrations.AddField(
            model_name="polygons",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_polygons",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
